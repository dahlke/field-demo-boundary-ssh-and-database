#!/bin/bash -l

###
# Create the Postgres Host, store the ID in the environment
###
export POSTGRES_HOST_ID=$(boundary hosts create static \
	-name postgres \
	-description "Postgres host" \
	-address "boundary-worker" \
	-host-catalog-id $PROJECT_HOST_CATALOG_ID \
	-format json | jq -r .item.id)

echo "Postgres Host ID:" $POSTGRES_HOST_ID
echo "export POSTGRES_HOST_ID=$POSTGRES_HOST_ID" >> ~/.bashrc

###
# Create the Postgres Host Set, store the ID in the environment
###
export POSTGRES_HOST_SET_ID=$(boundary host-sets create static \
	-name "test-postgres-host-set" \
	-description "Postgres machine host set" \
	-host-catalog-id $PROJECT_HOST_CATALOG_ID \
	-format json | jq -r .item.id)

echo "Postgres Host Set ID:" $POSTGRES_HOST_SET_ID
echo "export POSTGRES_HOST_SET_ID=$POSTGRES_HOST_SET_ID" >> ~/.bashrc

# Add host to host-set
boundary host-sets add-hosts \
	-id $POSTGRES_HOST_SET_ID \
	-host=$POSTGRES_HOST_ID

###
# Create the Postgres Target, store the ID in the environment
###
export POSTGRES_TARGET_ID=$(boundary targets create tcp \
	-name "postgres-test-targets" \
	-description "Test Postgres target" \
	-default-port 5432 \
	-scope-id $PROJECT_SCOPE_ID \
	-session-connection-limit "-1" \
	-format json | jq -r .item.id)

echo "Postgres Target ID:" $POSTGRES_TARGET_ID
echo "export POSTGRES_TARGET_ID=$POSTGRES_TARGET_ID" >> ~/.bashrc

# Add host-set to the target
boundary targets add-host-sets \
	-id $POSTGRES_TARGET_ID \
	-host-set $POSTGRES_HOST_SET_ID

# Connect to postgres
export PGPASSWORD=postgres
boundary connect postgres -target-id $POSTGRES_TARGET_ID -username postgres

exit 0
